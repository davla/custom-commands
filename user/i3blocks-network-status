#!/bin/sh

# This script is meant to be used in i3blocks. It displays the network status
# in a super compact way, that is a colored label. For cabled interfaces it
# only displays up/down status in different colors. For wireless ones it also
# shows signal strength, again color-coding intervals.
#
# Arguments:
#   - -i INTERFACE  The interface whose status will be displayed. these
#                   constant values are available:
#                       - ethernet/cable - for the ethernet interface listed
#                           first in `ip link show` command..
#                       - wireless/wifi - for the wireless interface listed
#                           first in `ip link show` command.
#
#   - -t TYPE       The type of the connection. One of:
#                       - ethernet/cable
#                       - wireless/wifi
#                   The type is detected automatically for the following
#                   interface names:
#                       - ethernet, cable, en*, eth* --> cable
#                       - wireless, wifi, wl*, wlan* --> wireless
#
#   - -l LABEL      The label to be displayed. Optional, the default varies
#                   based on the detected connection type:
#                       - ethernet - E
#                       - wireless - W
#
#   - -g LEVEL      The absolute dBm value above which wireless connection
#                   signal is considered good. Defaults to 80.
#
#   - -h            Display the help message.
#
#   - -m LEVEL      The absolute dBm value above which wireless connection
#                   signal is considered medium. Defaults to 40.
#
#   - -B color      The label color for bad wireless connections. Defaults to
#                   #FF0000 (red).
#
#   - -D color      The label color for down connections. Defaults to #666666
#                   (gray).
#
#   - -G color      The label color for good wireless connections and up
#                   cabled connections. Defaults to #00FF00 (green).
#
#   - -M color      The label color for medium wireless connections. Defaults
#                   to #FFFF00 (yellow).

#######################################
# Variables
#######################################

# Colors
BAD_COLOR="#FF0000"
DOWN_COLOR="#666666"
GOOD_COLOR="#00FF00"
MEDIUM_COLOR="#FFFF00"

# Levels
GOOD_LEVEL='80'
MEDIUM_LEVEL='40'

# Misc
INTERFACE=''
INTERFACE_TYPE=''
LETTER=''

#######################################
# Input processing
#######################################

while getopts 'B:D:G:M:g:hi:l:m:t:' OPTION; do
    case "$OPTION" in
        'B')
            BAD_COLOR="$OPTARG"
            ;;

        'D')
            DOWN_COLOR="$OPTARG"
            ;;

        'G')
            GOOD_COLOR="$OPTARG"
            ;;

        'M')
            MEDIUM_COLOR="$OPTARG"
            ;;

        'g')
            GOOD_LEVEL="$OPTARG"
            ;;

        'h')
            cat <<EOF
Usage: $(basename "$0") -i INTERFACE [-l LABEL] [-g LEVEL] [-m LEVEL]
    [-B COLOR] [-M COLOR] [-G COLOR] [-D COLOR]

Displays i3blocks network status via a colored label. Up/down status for cabled
connections, signal strength for wireless ones.

Options:
    -i INTERFACE    The interface whose status will be displayed. these
                    constant values are available:
                        - ethernet/cable - for the ethernet interface listed
                            first in `ip link show` command..
                        - wireless/wifi - for the wireless interface listed
                            first in `ip link show` command.

    -t TYPE         The type of the connection. One of:
                        - ethernet/cable
                        - wireless/wifi
                    The type is detected automatically for the following
                    interface names:
                        - ethernet, cable, en*, eth* - cable
                        - wireless, wifi, wl*, wlan* - wireless

    -l LABEL        The label to be displayed. Optional, the default varies
                    based on the detected connection type:
                        - ethernet - E
                        - wireless - W

    -g LEVEL        The absolute dBm value above which wireless connection
                    signal is considered good. Defaults to 80.

    -h              Display this help message.

    -m LEVEL        The absolute dBm value above which wireless connection
                    signal is considered medium. Defaults to 40.

    -B COLOR        The label color for bad wireless connections. Defaults to
                    #FF0000 (red).

    -D COLOR        The label color for down connections. Defaults to #666666
                    (gray).

    -G COLOR        The label color for good wireless connections and up cabled
                    connections. Defaults to #00FF00 (green).

    -M COLOR        The label color for medium wireless connections. Defaults
                    to #FFFF00 (yellow).
EOF
            exit
            ;;

        'i')
            INTERFACE="$OPTARG"
            NORMALIZED_INTERFACE="$(echo "$INTERFACE" \
                | tr '[:upper:]' '[:lower:]')"
            ;;

        'l')
            LETTER="$OPTARG"
            ;;

        'm')
            MEDIUM_LEVEL="$OPTARG"
            ;;

        't')
            INTERFACE_TYPE="$OPTARG"
            ;;

        *)  # getopts has already printed an error message
            exit 1
            ;;
    esac
done

# Sanitizing $INTERFACE
case "$NORMALIZED_INTERFACE" in
    'ethernet'|'cable'|'wireless'|'wifi')
        ;;

    '')
        echo >&2 'No interface specified!'
        exit 1
        ;;

    *)
        ip link show | grep -w "$INTERFACE" > /dev/null 2> /dev/null || {
            echo >&2 "Interface '$INTERFACE' unknown!"
            exit 1
        }
        ;;
esac

#######################################
# Guessing interface type
#######################################

[ -z "$INTERFACE_TYPE" ] && case "$NORMALIZED_INTERFACE" in

    'ethernet'|'cable'|eth*)
        INTERFACE_TYPE='cable'
        ;;

    'wireless'|'wifi'|wlan*)
        INTERFACE_TYPE='wireless'
        ;;

    *)
        if echo "$INTERFACE" | grep '^en' > /dev/null 2> /dev/null; then
            INTERFACE_TYPE='cable'
        elif echo "$INTERFACE" | grep '^wl' > /dev/null 2> /dev/null; then
            INTERFACE_TYPE='wireless'
        else
            echo >&2 "Cannot detect interface type for interface '$INTERFACE'!"
            exit 1
        fi
        ;;
esac

#######################################
# Interface type-dependent variables
#######################################

# $LETTER defaults
[ -z "$LETTER" ] && case "$INTERFACE_TYPE" in

    'ethernet'|'cable')
        LETTER='E'
        ;;

    'wireless'|'wifi')
        LETTER='W'
        ;;
esac

# Interface regex for grepping in ip output
case "$INTERFACE_TYPE" in
    'ethernet'|'cable')
        # On new XXX, ethernet interfaces start with 'en'
        INTERFACE_REGEX='^(en|eth)'
        ;;

    'wireless'|'wifi')
        # On new XXX, wireless interfaces start with 'wl'
        INTERFACE_REGEX='^(wl|wlan)'
        ;;

    *)
        INTERFACE_REGEX="$INTERFACE"
        ;;
esac

#######################################
# i3blocks output
#######################################

# full_text
echo "$LETTER"
# short_text
echo "$LETTER"

# color
case "$INTERFACE_TYPE" in

    'ethernet'|'cable')
        ip link show | awk "match(\$2, /$INTERFACE_REGEX/) {
            print \$9 == \"UP\" ? \"$GOOD_COLOR\" : \"$DOWN_COLOR\"
        }"
        ;;

    'wireless'|'wifi')
        IF_DATA="$(ip link show | awk "match(\$2, /$INTERFACE_REGEX/) {
                print \$2
            }" | xargs -i grep '{}' /proc/net/wireless)"

        # If the interface is not found in /proc/net/wireless, then the
        # interface is down
        [ -z "$IF_DATA" ] && {
            echo "$DOWN_COLOR"
            exit
        }

        # The third field is the link quality. The scaling factor adjusts it to
        # be claser to the one nmcli displays
        echo "$IF_DATA" | awk '{ print int($3 * 1.15) }' \
            | while read LEVEL; do
                if [ "$LEVEL" -ge "$GOOD_LEVEL" ]; then
                    echo "$GOOD_COLOR"
                elif [ "$LEVEL" -ge "$MEDIUM_LEVEL" ]; then
                    echo "$MEDIUM_COLOR"
                else
                    echo "$BAD_COLOR"
                fi
            done
        ;;
esac
