#!/bin/sh

# This script is meant to be used in i3blocks. It displays the network status
# in a super compact way, that is a colored label. For cabled connections it
# only displays up/down status in different colors. For wireless ones it also
# shows signal strength, again color-coding intervals.
#
# Arguments:
#   - -i INTERFACE  The connection whose status will be displayed. Can be one
#                   of:
#                       - ethernet/cable
#                       - wireless/wifi
#                   Systems with more than one interface per type are not
#                   supported.
#
#   - -l LABEL      The label to be displayed. Optional, defaults to 'E' for
#                   cabled connections, and to 'W' for wireless.
#
#   - -g LEVEL      The absolute dBm value above which wireless connection
#                   signal is considered good. Defaults to 80.
#
#   - -h            Display the help message.
#
#   - -m LEVEL      The absolute dBm value above which wireless connection
#                   signal is considered medium. Defaults to 40.
#
#   - -B color      The label color for bad wireless connections. Defaults to
#                   #FF0000 (red).
#
#   - -D color      The label color for down connections. Defaults to #666666
#                   (gray).
#
#   - -G color      The label color for good wireless connections and up
#                   cabled connections. Defaults to #00FF00 (green).
#
#   - -M color      The label color for medium wireless connections. Defaults
#                   to #FFFF00 (yellow).

#######################################
# Variables
#######################################

# Colors
BAD_COLOR="#FF0000"
DOWN_COLOR="#666666"
GOOD_COLOR="#00FF00"
MEDIUM_COLOR="#FFFF00"

# Levels
GOOD_LEVEL='80'
MEDIUM_LEVEL='40'

# Misc
INTERFACE=''
LETTER=''

#######################################
# Input processing
#######################################

while getopts 'B:D:G:M:g:hi:l:m:' OPTION; do
    case "$OPTION" in
        'B')
            BAD_COLOR="$OPTARG"
            ;;

        'D')
            DOWN_COLOR="$OPTARG"
            ;;

        'G')
            GOOD_COLOR="$OPTARG"
            ;;

        'M')
            MEDIUM_COLOR="$OPTARG"
            ;;

        'g')
            GOOD_LEVEL="$OPTARG"
            ;;

        'h')
            cat <<EOF
Usage: $(basename "$0") -i INTERFACE [-l LABEL] [-g LEVEL] [-m LEVEL]
    [-B COLOR] [-M COLOR] [-G COLOR] [-D COLOR]

Displays i3blocks network status via a colored label. Up/down status for cabled
connections, signal strength for wireless ones.

Options:
    -i INTERFACE    The connection whose status will be displayed. Can be one
                    of:
                        - ethernet/cable
                        - wireless/wifi
                    Systems with more than one interface per type are not
                    supported.

    -l LABEL        The label to be displayed. Optional, defaults to 'E' for
                    cabled connections, and to 'W' for wireless.

    -g LEVEL        The absolute dBm value above which wireless connection
                    signal is considered good. Defaults to 80.

    -h              Display this help message.

    -m LEVEL        The absolute dBm value above which wireless connection
                    signal is considered medium. Defaults to 40.

    -B COLOR        The label color for bad wireless connections. Defaults to
                    #FF0000 (red).

    -D COLOR        The label color for down connections. Defaults to #666666
                    (gray).

    -G COLOR        The label color for good wireless connections and up cabled
                    connections. Defaults to #00FF00 (green).

    -M COLOR        The label color for medium wireless connections. Defaults
                    to #FFFF00 (yellow).
EOF
            exit
            ;;

        'i')
            INTERFACE="$(echo "$OPTARG" | tr '[:upper:]' '[:lower:]')"
            ;;

        'l')
            LETTER="$OPTARG"
            ;;

        'm')
            MEDIUM_LEVEL="$OPTARG"
            ;;

        *)  # getopts has already printed an error message
            exit 1
            ;;
    esac
done

# Sanitizing $INTERFACE
case "$INTERFACE" in
    'ethernet'|'cable'|'wireless'|'wifi')
        ;;

    '')
        echo >&2 'No interface specified!'
        exit 1
        ;;

    *)
        echo >&2 "Error: $INTERFACE unknown!"
        exit 1
        ;;
esac

# $LETTER defaults
[ -z "$LETTER" ] && case "$INTERFACE" in
    'ethernet'|'cable')
        LETTER='E'
        ;;
    'wireless'|'wifi')
        LETTER='W'
        ;;
esac

#######################################
# i3blocks output
#######################################

# full_text
echo "$LETTER"
# short_text
echo "$LETTER"

# color
case "$INTERFACE" in

    'ethernet'|'cable')

        #######################################
        # Ethernet
        #######################################

        # On new XXX, ethernet interfaces start with 'en'
        ip link show | awk "match(\$2, /^en/) {
            print \$9 == \"UP\" ? \"$GOOD_COLOR\" : \"$DOWN_COLOR\"
        }"
        ;;

    'wireless'|'wifi')

        #######################################
        # Wireless
        #######################################

        # On new XXX, wireless interfaces start with 'wl'
        IF_DATA="$(ip link show | awk 'match($2, /^wl/) {print $2}' \
            | xargs -i grep '{}' /proc/net/wireless)"

        # If the interface is not found in /proc/net/wireless, then the
        # interface is down
        [ -z "$IF_DATA" ] && {
            echo "$DOWN_COLOR"
            exit
        }

        # The fourth field (level) can be negative, since it's in dBm
        echo "$IF_DATA" | awk '{
            gsub("-", "", $4)
            print int($4)
        }' | while read LEVEL; do
                if [ "$LEVEL" -ge "$GOOD_LEVEL" ]; then
                    echo "$GOOD_COLOR"
                elif [ "$LEVEL" -ge "$MEDIUM_LEVEL" ]; then
                    echo "$MEDIUM_COLOR"
                else
                    echo "$BAD_COLOR"
                fi
                exit
            done
        ;;
esac
